*Search for remote work in technical coding roles with higher pay.

*Do not deviate from these key topics in 2024.
  UI : Angular,React,TypeScript,CSS
  DotNet Core
  Version Control : Git
  CI CD : Azure DevOps
  Cloud : Azure
  Automated Testing : NUnit, Playwright

*Find good study sources, video+pdf for the above topics.

*Complete the certifications for Azure cloud by December 2024.



git config --global --add safe.directory

https://huggingface.co/

https://blog.quastor.org/

Green Blue Deployment method

Sample portfolio : https://rv2442.github.io/www.rahulvijan.tech/

*Load Balancing Algorithms
1.Static, Dynamic
2.Round Robin, Weighted Round Robin
3.Least Connections, Least Response Time
4.The Power of 2 Random Choices, Consistent Hashing, Maglev Hashing : pending

*Free AI Courses
https://www.classcentral.com/subject/ai

*https://www.elementsofai.com Chapter 1.1

*Open source identity management on linux
  . https://sssd.io/

*AI
  . Machine Learning
  . Data Science
  . Deep Learning

*Euler diagram : diagram representing group or classification of things

**https://www.elementsofai.com Chapter 1 Completed, waiting for peer review of last question

**https://www.elementsofai.com Chapter 2.1
  . The state space
  . Transitions
  . Path
  . Cost

AI in games
  . Minimax algorithm, Alpha-Beta Pruning

Game trees
  . Root Node
  . Child Nodes
  . Heuristic evaluation function

****https://www.elementsofai.com Chapter 2 completed

https://www.simplilearn.com/pgp-cyber-security-certification-training-course?source=preview_Cyber%20Security_tabular&eventname=Mega_Menu_New_Select_Category_table

****https://www.elementsofai.com Chapter 3 completed
  . Odds and Probabilities
  . Bayes Rule
  . Naive Bayes classification


****https://www.elementsofai.com Chapter 4.1 completed
Types of Machine Learning
  . Supervised Learning
  . Unsupervised Learning
  . Reinforcement Learning
  . Semi supervised Learning

Supervised Learning
  . Linear Regression / Just Regression
  . Training Data
  . Test Data
  . Overfitting

Unsupervised Learning
  . Typical unsupervised learning methods attempt to learn some kind of “structure” underlying the data.(clustering)
  . Generative modeling, Generative Adversarial Networks.

Supervised Learning
  . Nearest neighbor classifier
  . Euclidean distance
  . Defining what is "nearest"
  . nnc is used in AI to sstudy user beahvior
  . filter bubbles

Linear Regresssion
  . Starting point for calculation in linear regression is called the intercept
  . Biased data and data quality

****https://www.elementsofai.com Chapter 4 completed

AI Certifications-- none found all costly

***https://course.elementsofai.com Chapter 5.1 completed
Neural Networks
  . Neurons
  . Dendrites : incoming
  . Axons : outgoing one to many
  . Synapses : connect dendrite with axons

  . Neural networks can process vast amounts of data simultaneously, unlike the CPU which executes instructions serially.
  . Neural networks can store and process the data at same time.


***https://course.elementsofai.com Chapter 5.2 completed
Neural Networks
  . Have weights assigned to parameters or labels for calculation
  . Sum of the weights multiplied by number of inputs is called the linear combination of the inputs.
  . linear combination = intercept + (weight1 x input1) + (weight2 x input2) + (weight3 x input3) + (weight4 x input4)..

Neuron Activations and Outputs
  . The linear combination is passed through the activation function.
  . Types of activation functions : Identity function, Step function, Sigmoid function.

Artificial Neural Networks ANN
  . Perceptron
  . Perceptron algorithm, Backpropogation algorithm.
  . Neural network architecture is made up of layers, ex: Input Layer, Hidden Layer, Output Layer.
  . Input Layer -> Directly exposed to data or the input data.
  . Hidden Layer -> Whose neurons take input from neurons from output of neurons of the previous layer.
  . Output Layer -> Layer of neurons which output the result.

***https://course.elementsofai.com Chapter 5.3 completed
Advanced Neural Networks
  . Convolutional Neural Networks
  . CNNs can be added as a layer to existing neural network for increasing efficiency while processing image based inputs.
  . Generative Adversarial network - Combination of two networks - Generative network + Adversarial Network.
  . Attention mechanism -  Generative Pretrained Transformer(GPT).

***https://course.elementsofai.com Chapter 6
  . Algorithmic Bias
  . 

AZ 204 Azure Certification https://learn.microsoft.com/en-us/credentials/certifications/azure-developer/

Azure app service

*Autoscale
 . Scale-up, Scale-down - increase or decrease cpu,ram,etc.
 . Scale in - Scale out - increase or decrease number of instances.

*Deployment slots
 . Deployment slots are live apps with their own host names.

*App service plan tiers - Standard appservice plan, etc
 . An App Service plan defines a set of compute resources for a web app to run.

code> Cloud shell command  az webapp list-runtimes --os-type linux

*AZ-204: Implement Azure App Service web apps Unit 2 of 9 completed

https://medium.com/@aayyash/authentication-in-angular-why-it-is-so-hard-to-wrap-your-head-around-it-23ea38a366de

*Azure Cloud Shell

App service plan
  . Shared compute
  . Dedicated compute
  . Isolated

code> az webapp up

*Research more on* Multi-tenant application, Single Tenant Application

Find outbound IPs
code> 
az webapp show \
    --resource-group <group_name> \ 
    --name <app_name> \ 
    --query possibleOutboundIpAddresses \
    --output tsv

*Unit 7 of 9 remaining in  AZ-204: Implement Azure App Service web apps / Explore Azure App Service 

https://github.com/INNVTV/NetCore-Clean-Architecture

*Unit 8 of 8 (all) completed  AZ-204: Implement Azure App Service web apps / Configure web app settings 

https://learn.microsoft.com/en-us/credentials/certifications/exams/az-204/

Code to stream logs to azure cloud shell
Code> az webapp log tail --name appname --resource-group myResourceGroup

Intermediate certificates in the certificate chain.

Hardware specifications are defined in the app service plan, which can then be used to scale in or scale out

App Service Plan Tiers
Standard 
Premium 
Isolated

runaway autoscaling

Autoscale conditions and metrics

cpu percentage
memory percentage
disk queue length
http queue length
data in
data out

each metric has its own intrinsic time grain


Time grain vs Duration

what are webhooks

Unit 8 of 8 (all) completed AZ-204: Implement Azure App Service web apps / Scale apps in Azure App Service

Automatic routing for releasing test feature or beta feature to sample of production users
x-ms-routing-name=staging
x-ms-routing-name=self

Unit 8 of 8 (all) completed AZ-204: Implement Azure App Service web apps / Explore Azure App Service deployment slots 


**Docker Deep Dive 29 of 419 completed

*Docker Engine, Docker Runtime

*Docker daemon, Docker Client

*OCI Open Container Initiative specification
 . image-spec
 . runtime-spec

**Docker Deep Dive 57 of 419 completed

*Docker commands
 . dockercli -Version
 . docker image ls
 . docker container ls
 . docker system info
 . docker version
 . docker --version
 . docker-compose --version
 . docker-machine --version
 . notary version - investigate which command is this

* Best Practice - Do not install Docker under root user on Linux OS

*After installing docker two major components are installed
 . docker daemon / server / engine
 . docker client

**Docker Deep Dive 80 of 419 completed
. docker container run -it ubuntu:latest /bin/bash - spins up new docker container and runs bash
. docker container run -it microsoft/powershell:nanoserver pwsh.exe
. docker container exec -it vigilant_borg bash - attach to running container
. docker container exec -it pensive_hamilton pwsh.exe - attach to running container
. docker container stop vigilant_borg - stop container
. docker container rm vigilant_borg - delete or remove the docker container
. Ctrl + PQ - exit container interactive shell
. docker container ls -a - lists all containers even those which are stopped

*Containerizing an app
. docker build -t test:latest - run this command in the directory containing the app docker file
. docker container run -d \
  --name web1 \
  --publish 8080:8080 \
  test:latest - runs docker container from the image built with label test-latest

*Docker Engine
. Docker client
. Docker daemon
. containerd
. runc

*New Docker Architecture 
. client 
. daemon
. containerd
. shim - for daemonless containers when the daemon needs to be updated or maintained
. runc

*runc
. It is implementation of OCI container runtime spec

*containerd
. used to manage the container life cycle
. creates OCI compliant images from docker file / instructions passed by the daemon
. the OCI compliant images are passed onto the runc to spin up new containers

**Docker Deep Dive 111 of 419 completed

*Docker Images
. images are build-time constructs as opposed to containers which are run-time constructs
. image cannot be deleted until all containers running the image are removed
. docker images are made of loosely connected layers

*Containers do not contain their own kernel but use kernel shared by the Host OS

*Image registries
. Image registry can contain multiple image repositories which inturn can contain multiple images
. image registy example : hub.docker.com

*docker image command
. docker image ls--filter dangling=true
. docker image prune -a - removes unused images with no attached container instances

**Docker Deep Dive 113 of 419 completed

*Docker Image
. docker image inspect <imagename>
. docker history <imagename>

**Docker Deep Dive 116 of 419 completed

*Docker Container
. Container is runtime instance of an image
. Containers share the OS or kernel of the host they are running on

*Docker container commands
. docker container run <image> <commands>
. docker container run ubuntu /bin/bash
. container run-it microsoft/powershell:nanoserver pwsh.exe
. docker container run alpine:latest sleep 10

**Host can be anything laptop, server, vm in cloud - which can run a vm or container

**Linux commands
. usermod-aG docker <user> : add user to the docker user group
. systemlctl restart docker : restart docker

*Docker container commands
. docker container exec -it 3027eb644874 bash - reattach to container shell if the container is still running


**Docker Deep Dive 138 of 419 completed

*Docker Container Life Cycle

*Self healing containers with restart policy
. always
. unless-stopped
. on-failed
. docker container run --name cnt1 -it --restart always microsoft/powershell:nanosever


*Running docker container in background
. docker container run -d --name webserver -p 80:8080 nigelpoulton/pluralsight-docker-ci
. port mappings are expressed as host-port:container:port
. docker container rm $(docker container ls -aq) -f - forceremoves all containers which are running
 
**Docker Deep Dive 145 of 419 completed

*Jargon 
. muti stage builds
. Docker Compose, Docker Stacks

*Dockerizing Applications
. The directory containing the application is called the build context.
. Its common practice to keep the docker file in the root directory of build context.
. The name of `Dockerfile` is case-sensitive.
. Dockerfile contains the instructions for the docker host engine to build image from the image file Dockerfile.
. All docker files start with FROM keyword which forms the base layer for of the docker image


. docker image build -t web:latest . - builds docker image based on Dockerfile located at build context `.`
. docker login
. docker image tag web:latest nigelpoulton/web:latest  -> retag docker image with repo name before pushing
. docker image push nigelpoulton/web:latest


. # is used for adding comments in Dockerfile
. docker image history <imagename>






